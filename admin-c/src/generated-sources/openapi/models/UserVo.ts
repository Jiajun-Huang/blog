/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UserVo
 */
export interface UserVo {
    /**
     * 
     * @type {number}
     * @memberof UserVo
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof UserVo
     */
    username?: string;
    /**
     * 
     * @type {string}
     * @memberof UserVo
     */
    nickname?: string;
    /**
     * 
     * @type {string}
     * @memberof UserVo
     */
    avatar?: string;
    /**
     * 
     * @type {string}
     * @memberof UserVo
     */
    email?: string;
    /**
     * 
     * @type {string}
     * @memberof UserVo
     */
    role?: string;
    /**
     * 
     * @type {Date}
     * @memberof UserVo
     */
    createTime?: Date;
    /**
     * 
     * @type {Date}
     * @memberof UserVo
     */
    updateTime?: Date;
}

/**
 * Check if a given object implements the UserVo interface.
 */
export function instanceOfUserVo(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function UserVoFromJSON(json: any): UserVo {
    return UserVoFromJSONTyped(json, false);
}

export function UserVoFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserVo {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'username': !exists(json, 'username') ? undefined : json['username'],
        'nickname': !exists(json, 'nickname') ? undefined : json['nickname'],
        'avatar': !exists(json, 'avatar') ? undefined : json['avatar'],
        'email': !exists(json, 'email') ? undefined : json['email'],
        'role': !exists(json, 'role') ? undefined : json['role'],
        'createTime': !exists(json, 'createTime') ? undefined : (new Date(json['createTime'])),
        'updateTime': !exists(json, 'updateTime') ? undefined : (new Date(json['updateTime'])),
    };
}

export function UserVoToJSON(value?: UserVo | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'username': value.username,
        'nickname': value.nickname,
        'avatar': value.avatar,
        'email': value.email,
        'role': value.role,
        'createTime': value.createTime === undefined ? undefined : (value.createTime.toISOString()),
        'updateTime': value.updateTime === undefined ? undefined : (value.updateTime.toISOString()),
    };
}

