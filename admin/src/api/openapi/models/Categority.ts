/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Blog } from './Blog';
import {
    BlogFromJSON,
    BlogFromJSONTyped,
    BlogToJSON,
} from './Blog';

/**
 * 
 * @export
 * @interface Categority
 */
export interface Categority {
    /**
     * 
     * @type {number}
     * @memberof Categority
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof Categority
     */
    name?: string;
    /**
     * 
     * @type {Array<Blog>}
     * @memberof Categority
     */
    blogs?: Array<Blog>;
}

/**
 * Check if a given object implements the Categority interface.
 */
export function instanceOfCategority(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CategorityFromJSON(json: any): Categority {
    return CategorityFromJSONTyped(json, false);
}

export function CategorityFromJSONTyped(json: any, ignoreDiscriminator: boolean): Categority {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'blogs': !exists(json, 'blogs') ? undefined : ((json['blogs'] as Array<any>).map(BlogFromJSON)),
    };
}

export function CategorityToJSON(value?: Categority | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'blogs': value.blogs === undefined ? undefined : ((value.blogs as Array<any>).map(BlogToJSON)),
    };
}

