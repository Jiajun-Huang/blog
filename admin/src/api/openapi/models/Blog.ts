/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Categority } from './Categority';
import {
    CategorityFromJSON,
    CategorityFromJSONTyped,
    CategorityToJSON,
} from './Categority';
import type { Tag } from './Tag';
import {
    TagFromJSON,
    TagFromJSONTyped,
    TagToJSON,
} from './Tag';
import type { User } from './User';
import {
    UserFromJSON,
    UserFromJSONTyped,
    UserToJSON,
} from './User';

/**
 * 
 * @export
 * @interface Blog
 */
export interface Blog {
    /**
     * 
     * @type {number}
     * @memberof Blog
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof Blog
     */
    title?: string;
    /**
     * 
     * @type {string}
     * @memberof Blog
     */
    uri?: string;
    /**
     * 
     * @type {string}
     * @memberof Blog
     */
    coverPath?: string;
    /**
     * 
     * @type {string}
     * @memberof Blog
     */
    contentPath?: string;
    /**
     * 
     * @type {string}
     * @memberof Blog
     */
    flag?: string;
    /**
     * 
     * @type {number}
     * @memberof Blog
     */
    views?: number;
    /**
     * 
     * @type {number}
     * @memberof Blog
     */
    likes?: number;
    /**
     * 
     * @type {boolean}
     * @memberof Blog
     */
    commentable?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Blog
     */
    published?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Blog
     */
    deleted?: boolean;
    /**
     * 
     * @type {Date}
     * @memberof Blog
     */
    createTime?: Date;
    /**
     * 
     * @type {Date}
     * @memberof Blog
     */
    updateTime?: Date;
    /**
     * 
     * @type {User}
     * @memberof Blog
     */
    user?: User;
    /**
     * 
     * @type {Categority}
     * @memberof Blog
     */
    categority?: Categority;
    /**
     * 
     * @type {Array<Tag>}
     * @memberof Blog
     */
    tags?: Array<Tag>;
}

/**
 * Check if a given object implements the Blog interface.
 */
export function instanceOfBlog(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function BlogFromJSON(json: any): Blog {
    return BlogFromJSONTyped(json, false);
}

export function BlogFromJSONTyped(json: any, ignoreDiscriminator: boolean): Blog {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'title': !exists(json, 'title') ? undefined : json['title'],
        'uri': !exists(json, 'uri') ? undefined : json['uri'],
        'coverPath': !exists(json, 'coverPath') ? undefined : json['coverPath'],
        'contentPath': !exists(json, 'contentPath') ? undefined : json['contentPath'],
        'flag': !exists(json, 'flag') ? undefined : json['flag'],
        'views': !exists(json, 'views') ? undefined : json['views'],
        'likes': !exists(json, 'likes') ? undefined : json['likes'],
        'commentable': !exists(json, 'commentable') ? undefined : json['commentable'],
        'published': !exists(json, 'published') ? undefined : json['published'],
        'deleted': !exists(json, 'deleted') ? undefined : json['deleted'],
        'createTime': !exists(json, 'createTime') ? undefined : (new Date(json['createTime'])),
        'updateTime': !exists(json, 'updateTime') ? undefined : (new Date(json['updateTime'])),
        'user': !exists(json, 'user') ? undefined : UserFromJSON(json['user']),
        'categority': !exists(json, 'categority') ? undefined : CategorityFromJSON(json['categority']),
        'tags': !exists(json, 'tags') ? undefined : ((json['tags'] as Array<any>).map(TagFromJSON)),
    };
}

export function BlogToJSON(value?: Blog | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'title': value.title,
        'uri': value.uri,
        'coverPath': value.coverPath,
        'contentPath': value.contentPath,
        'flag': value.flag,
        'views': value.views,
        'likes': value.likes,
        'commentable': value.commentable,
        'published': value.published,
        'deleted': value.deleted,
        'createTime': value.createTime === undefined ? undefined : (value.createTime.toISOString()),
        'updateTime': value.updateTime === undefined ? undefined : (value.updateTime.toISOString()),
        'user': UserToJSON(value.user),
        'categority': CategorityToJSON(value.categority),
        'tags': value.tags === undefined ? undefined : ((value.tags as Array<any>).map(TagToJSON)),
    };
}

